{"ast":null,"code":"var _jsxFileName = \"/Users/josephbruno/employee-directory/user-directory/src/App.js\";\nimport React from \"react\";\nimport Table from \"./components/Table\";\nimport Wrapper from \"./components/Wrapper\";\nimport employees from \"./employees.json\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      employees,\n      search: \"\"\n    };\n\n    this.sortByName = () => {\n      const sortByName = this.state.employees.sort(function (a, b) {\n        let nameOne = a.name.toLowerCase();\n        let nameTwo = b.name.toLowerCase();\n        if (nameOne < nameTwo) return -1;\n        if (nameOne > nameTwo) return 1;\n        return 0;\n      });\n      this.setState(sortByName);\n    };\n\n    this.sortByOccupation = () => {\n      const sortByOccupation = this.state.employees.sort(function (a, b) {\n        let occupationOne = a.occupation.toLowerCase();\n        let occupationTwo = b.occupation.toLowerCase();\n        if (occupationOne < occupationTwo) return -1;\n        if (occupationOne > occupationTwo) return 1;\n        return 0;\n      });\n      this.setState(sortByOccupation);\n    };\n\n    this.sortBySalary = () => {\n      const sortBySalary = this.state.employees.sort(function (a, b) {\n        let salaryOne = a.salary.toLowerCase();\n        let salaryTwo = b.salary.toLowerCase();\n        if (salaryOne < salaryTwo) return -1;\n        if (salaryOne > salaryTwo) return 1;\n        return 0;\n      });\n      this.setState(sortBySalary);\n    };\n\n    this.resetEmployees = () => {\n      this.setState({\n        employees\n      });\n      this.setState({\n        search: \"\"\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        search: event.target.value\n      });\n      const employeeSearch = this.state.employees.filter(employee => employee.name.includes(this.state.search) || employee.role.includes(this.state.search));\n      this.setState({\n        employees: employeeSearch\n      });\n\n      if (event.target.value === '') {\n        this.setState({\n          employees\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Wrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, \"Company Employee Directory\"), this.state.employees.map(employee => /*#__PURE__*/React.createElement(Table, {\n      id: employee.id,\n      key: employee.id,\n      name: employee.name,\n      occupation: employee.occupation,\n      salary: employee.salary,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    })), \";\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/josephbruno/employee-directory/user-directory/src/App.js"],"names":["React","Table","Wrapper","employees","App","Component","state","search","sortByName","sort","a","b","nameOne","name","toLowerCase","nameTwo","setState","sortByOccupation","occupationOne","occupation","occupationTwo","sortBySalary","salaryOne","salary","salaryTwo","resetEmployees","handleChange","event","target","value","employeeSearch","filter","employee","includes","role","render","map","id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Table from \"./components/Table\";\nimport Wrapper from \"./components/Wrapper\"\nimport employees from \"./employees.json\"\n\nclass App extends React.Component {\n  state = {\n    employees,\n    search: \"\"\n  };\n\n  sortByName = () => {\n    const sortByName = this.state.employees.sort(function(a, b) {\n      let nameOne = a.name.toLowerCase();\n      let nameTwo = b.name.toLowerCase();\n      if (nameOne < nameTwo)\n        return -1\n      if (nameOne > nameTwo)\n        return 1\n      return 0\n    });\n    this.setState(sortByName);\n  };\n\n  sortByOccupation = () => {\n    const sortByOccupation = this.state.employees.sort(function(a, b) {\n      let occupationOne = a.occupation.toLowerCase();\n      let occupationTwo = b.occupation.toLowerCase();\n      if (occupationOne < occupationTwo) \n        return -1\n      if (occupationOne > occupationTwo)\n        return 1\n      return 0\n    });\n    this.setState(sortByOccupation); \n  };\n\n  sortBySalary = () => {\n    const sortBySalary = this.state.employees.sort(function(a, b) {\n      let salaryOne = a.salary.toLowerCase();\n      let salaryTwo = b.salary.toLowerCase();\n      if (salaryOne < salaryTwo)\n        return -1\n      if (salaryOne > salaryTwo) \n        return 1\n      return 0\n    });\n    this.setState(sortBySalary);\n  };\n\n  resetEmployees = () => {\n    this.setState({employees});\n    this.setState({search: \"\"});\n  };\n\n  handleChange = (event) => {\n    this.setState({search: event.target.value});\n    const employeeSearch = this.state.employees.filter(employee => employee.name.includes(this.state.search)\n    || employee.role.includes(this.state.search));\n    this.setState({employees: employeeSearch});\n    if (event.target.value === '') {\n      this.setState({employees});\n    }\n  };\n\n  render() {\n    return (\n      <div>\n      <Wrapper>\n        <h1>Company Employee Directory</h1>\n        {this.state.employees.map(employee => (\n        <Table\n            id={employee.id}\n            key={employee.id}\n            name={employee.name}\n            occupation={employee.occupation}\n            salary={employee.salary}\n        />\n        ))};\n      </Wrapper>\n      </div>\n    )\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}